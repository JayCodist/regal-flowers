name: Deploy to Firebase Hosting

on:
  push:
    branches:
      - main
      - staging

jobs:
  build:
    name: Build and Deploy to Firebase
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Use Node.js 16.x
        uses: actions/setup-node@v4
        with:
          node-version: 16
          cache: 'yarn'
      - name: Install Dependencies
        run: yarn

      - name: Get Doppler secrets (Staging)
        uses: dopplerhq/secrets-fetch-action@v1.2.0
        if: github.ref == 'refs/heads/staging'
        with:
          doppler-token: ${{ secrets.DOPPLER_STAGING_TOKEN }}
          inject-env-vars: true

      - name: Get Doppler secrets (Production)
        uses: dopplerhq/secrets-fetch-action@v1.2.0
        if: github.ref == 'refs/heads/main'
        with:
          doppler-token: ${{ secrets.DOPPLER_PRODUCTION_TOKEN }}
          inject-env-vars: true

      - name: Build
        run: yarn deploy
        env:
          CI: ""

      - name: Deploy to Firebase Staging
        if: github.ref == 'refs/heads/staging'
        uses: w9jds/firebase-action@v11.18.0
        with:
          args: deploy --only hosting:regalflowersStaging --project ${{ secrets.PROJECT_ID_STAGING }}
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY_STAGING }}
          PROJECT_ID: ${{ secrets.PROJECT_ID_STAGING }}

      - name: Deploy to Firebase Production
        if: github.ref == 'refs/heads/main'
        uses: w9jds/firebase-action@v11.18.0
        with:
          args: deploy --only hosting:regalflowers --project ${{ secrets.PROJECT_ID_PRODUCTION }}
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY_PRODUCTION }}
          PROJECT_ID: ${{ secrets.PROJECT_ID_PRODUCTION }}
